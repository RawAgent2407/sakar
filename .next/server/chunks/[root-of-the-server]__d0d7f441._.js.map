{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///Users/rawboy/Downloads/property-final--master/src/app/api/inquiries/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server';\nimport mongoose from 'mongoose';\n\nconst MONGODB_URI = 'mongodb+srv://solankiish25:1234@cluster0.hvuwzyq.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0';\nconst DB_NAME = 'test';\n\nlet isConnected = false;\nasync function connectDB() {\n  if (isConnected) return;\n  await mongoose.connect(MONGODB_URI, { dbName: DB_NAME });\n  isConnected = true;\n}\n\nconst inquirySchema = new mongoose.Schema({\n  fullName: String,\n  email: String,\n  phone: String,\n  propertyType: String,\n  propertyId: String,\n  status: { type: String, default: 'new' },\n  agree: Boolean,\n  createdAt: { type: Date, default: Date.now },\n});\nconst Inquiry = mongoose.models.Inquiry || mongoose.model('Inquiry', inquirySchema, 'inquiries');\n\nexport async function POST(req: NextRequest) {\n  try {\n    await connectDB();\n    const data = await req.json();\n    const inquiry = await Inquiry.create(data);\n    return NextResponse.json({ success: true, inquiry });\n  } catch (error) {\n    console.error('Inquiry POST error:', error);\n    return NextResponse.json({ success: false, message: 'Internal server error' }, { status: 500 });\n  }\n}\n\nexport async function GET() {\n  try {\n    await connectDB();\n    const inquiries = await Inquiry.find().sort({ createdAt: -1 });\n    return NextResponse.json({ success: true, inquiries });\n  } catch (error) {\n    console.error('Inquiry GET error:', error);\n    return NextResponse.json({ success: false, message: 'Internal server error' }, { status: 500 });\n  }\n}\n\nexport async function PATCH(req: NextRequest) {\n  try {\n    await connectDB();\n    const { id, status } = await req.json();\n    if (!id || !status) return NextResponse.json({ success: false, message: 'Missing id or status' }, { status: 400 });\n    const inquiry = await Inquiry.findByIdAndUpdate(id, { status }, { new: true });\n    if (!inquiry) return NextResponse.json({ success: false, message: 'Inquiry not found' }, { status: 404 });\n    return NextResponse.json({ success: true, inquiry });\n  } catch (error) {\n    return NextResponse.json({ success: false, message: 'Internal server error' }, { status: 500 });\n  }\n} "],"names":[],"mappings":";;;;;AAAA;AACA;;;AAEA,MAAM,cAAc;AACpB,MAAM,UAAU;AAEhB,IAAI,cAAc;AAClB,eAAe;IACb,IAAI,aAAa;IACjB,MAAM,yGAAA,CAAA,UAAQ,CAAC,OAAO,CAAC,aAAa;QAAE,QAAQ;IAAQ;IACtD,cAAc;AAChB;AAEA,MAAM,gBAAgB,IAAI,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC;IACxC,UAAU;IACV,OAAO;IACP,OAAO;IACP,cAAc;IACd,YAAY;IACZ,QAAQ;QAAE,MAAM;QAAQ,SAAS;IAAM;IACvC,OAAO;IACP,WAAW;QAAE,MAAM;QAAM,SAAS,KAAK,GAAG;IAAC;AAC7C;AACA,MAAM,UAAU,yGAAA,CAAA,UAAQ,CAAC,MAAM,CAAC,OAAO,IAAI,yGAAA,CAAA,UAAQ,CAAC,KAAK,CAAC,WAAW,eAAe;AAE7E,eAAe,KAAK,GAAgB;IACzC,IAAI;QACF,MAAM;QACN,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,UAAU,MAAM,QAAQ,MAAM,CAAC;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAQ;IACpD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,uBAAuB;QACrC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/F;AACF;AAEO,eAAe;IACpB,IAAI;QACF,MAAM;QACN,MAAM,YAAY,MAAM,QAAQ,IAAI,GAAG,IAAI,CAAC;YAAE,WAAW,CAAC;QAAE;QAC5D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAU;IACtD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sBAAsB;QACpC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/F;AACF;AAEO,eAAe,MAAM,GAAgB;IAC1C,IAAI;QACF,MAAM;QACN,MAAM,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,MAAM,IAAI,IAAI;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAuB,GAAG;YAAE,QAAQ;QAAI;QAChH,MAAM,UAAU,MAAM,QAAQ,iBAAiB,CAAC,IAAI;YAAE;QAAO,GAAG;YAAE,KAAK;QAAK;QAC5E,IAAI,CAAC,SAAS,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAoB,GAAG;YAAE,QAAQ;QAAI;QACvG,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAQ;IACpD,EAAE,OAAO,OAAO;QACd,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAO,SAAS;QAAwB,GAAG;YAAE,QAAQ;QAAI;IAC/F;AACF","debugId":null}}]
}